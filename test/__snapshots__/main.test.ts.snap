// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Outputs": {
    "ServiceLoadBalancerDNSEC5B149E": {
      "Value": {
        "Fn::GetAtt": [
          "ServiceLBE9A1ADBC",
          "DNSName",
        ],
      },
    },
    "ServiceServiceURL250C0FB6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ServiceLBE9A1ADBC",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Cluster3DA9CCBA": {
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": {
          "Ref": "ClusterEB0386A7",
        },
        "DefaultCapacityProviderStrategy": [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "ClusterEB0386A7": {
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "DatabaseCluster68FC2945": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-postgresql14",
        "DBSubnetGroupName": {
          "Ref": "DatabaseClusterSubnets7FAE1846",
        },
        "DatabaseName": "postgres",
        "Engine": "aurora-postgresql",
        "EngineVersion": "14.6",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "testDatabaseClusterSecret1A6E87E93fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "postgres",
        "Port": 5432,
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DatabaseClusterSecurityGroupCBE34284",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DatabaseClusterInstance1C566869D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "DatabaseCluster68FC2945",
        },
        "DBInstanceClass": "db.r6g.large",
        "DBSubnetGroupName": {
          "Ref": "DatabaseClusterSubnets7FAE1846",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance252BB9A46": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "DatabaseCluster68FC2945",
        },
        "DBInstanceClass": "db.r6g.large",
        "DBSubnetGroupName": {
          "Ref": "DatabaseClusterSubnets7FAE1846",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterSecretAttachmentB8BF2F7B": {
      "Properties": {
        "SecretId": {
          "Ref": "testDatabaseClusterSecret1A6E87E93fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": {
          "Ref": "DatabaseCluster68FC2945",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DatabaseClusterSecurityGroupCBE34284": {
      "Properties": {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseClusterSecurityGroupfromtestServiceSecurityGroup5150CB51IndirectPortED93E6A6": {
      "Properties": {
        "Description": "from Zitadel App",
        "FromPort": {
          "Fn::GetAtt": [
            "DatabaseCluster68FC2945",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "DatabaseClusterSecurityGroupCBE34284",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupEEA09B68",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "DatabaseCluster68FC2945",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSubnets7FAE1846": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for DatabaseCluster database",
        "SubnetIds": [
          {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "Service9571FDD8": {
      "DependsOn": [
        "ServiceLBPublicListenerECSGroup0CC8688C",
        "ServiceLBPublicListener46709EAA",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "zitadel",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "ServiceLBPublicListenerECSGroup0CC8688C",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ServiceSecurityGroupEEA09B68",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "ServiceTaskDef1922A00F",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceLBE9A1ADBC": {
      "DependsOn": [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ServiceLBSecurityGroupF7435A5C",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VPCPublicSubnet1SubnetB4246D30",
          },
          {
            "Ref": "VPCPublicSubnet2Subnet74179F39",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ServiceLBPublicListener46709EAA": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ServiceLBPublicListenerECSGroup0CC8688C",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "ServiceLBE9A1ADBC",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ServiceLBPublicListenerECSGroup0CC8688C": {
      "Properties": {
        "HealthCheckPath": "/debug/healthz",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ServiceLBSecurityGroupF7435A5C": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB testServiceLB586D6618",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceLBSecurityGrouptotestServiceSecurityGroup5150CB518080B252CBA9": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupEEA09B68",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceLBSecurityGroupF7435A5C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ServiceSecurityGroupEEA09B68": {
      "Properties": {
        "GroupDescription": "test/Service/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceSecurityGroupfromtestServiceLBSecurityGroup070396498080F83BA643": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupEEA09B68",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceLBSecurityGroupF7435A5C",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ServiceTaskDef1922A00F": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "start-from-init",
              "--masterkey",
              "MasterkeyNeedsToHave32Characters",
              "--tlsMode",
              "disabled",
            ],
            "Environment": [
              {
                "Name": "ZITADEL_EXTERNALSECURE",
                "Value": "false",
              },
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "DatabaseCluster68FC2945",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_PORT",
                "Value": {
                  "Fn::GetAtt": [
                    "DatabaseCluster68FC2945",
                    "Endpoint.Port",
                  ],
                },
              },
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE",
                "Value": "disable",
              },
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE",
                "Value": "disable",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/zitadel/zitadel:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "ServiceTaskDefzitadelLogGroup26746705",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "Service",
              },
            },
            "Name": "zitadel",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_DATABASE",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DatabaseClusterSecretAttachmentB8BF2F7B",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_USER_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DatabaseClusterSecretAttachmentB8BF2F7B",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_USER_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DatabaseClusterSecretAttachmentB8BF2F7B",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DatabaseClusterSecretAttachmentB8BF2F7B",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "DatabaseClusterSecretAttachmentB8BF2F7B",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ServiceTaskDefExecutionRole919F7BE3",
            "Arn",
          ],
        },
        "Family": "testServiceTaskDef70FA6280",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "ServiceTaskDefTaskRole0CFE2F57",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ServiceTaskDefExecutionRole919F7BE3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ServiceTaskDefExecutionRoleDefaultPolicy3073559D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ServiceTaskDefzitadelLogGroup26746705",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "DatabaseClusterSecretAttachmentB8BF2F7B",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServiceTaskDefExecutionRoleDefaultPolicy3073559D",
        "Roles": [
          {
            "Ref": "ServiceTaskDefExecutionRole919F7BE3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServiceTaskDefTaskRole0CFE2F57": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ServiceTaskDefzitadelLogGroup26746705": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "VPCB9E5F0B4": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "DependsOn": [
        "VPCVPCGW99B986DC",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "DependsOn": [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "DependsOn": [
        "VPCVPCGW99B986DC",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/VPC/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "testDatabaseClusterSecret1A6E87E93fdaad7efa858a3daf9490cf0a702aeb": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
